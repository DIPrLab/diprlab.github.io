<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lakshmi Sahithi | DIPr Lab at PSU</title>
    <link>/author/lakshmi-sahithi/</link>
      <atom:link href="/author/lakshmi-sahithi/index.xml" rel="self" type="application/rss+xml" />
    <description>Lakshmi Sahithi</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Thu, 20 Feb 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/author/lakshmi-sahithi/avatar_hu_d331a8ff4c9272d3.png</url>
      <title>Lakshmi Sahithi</title>
      <link>/author/lakshmi-sahithi/</link>
    </image>
    
    <item>
      <title>Access Control in Vector Databases</title>
      <link>/project/vectordb-access-control/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      <guid>/project/vectordb-access-control/</guid>
      <description>&lt;p&gt;Vector databases are particularly well-suited for similarity search using search algorithms like approximate nearest neighbor (ANN) search and they are used in development of Retrieval-Augmented Generation (RAG) systems, to reduce hallucinations in responses of AI systems. One significant challenge in using vector databases, especially in applications like RAG, is ensuring data privacy and security. For example, a clothing company that builds an AI chatbot that interacts with a vector database containing customer orders and product data could expose sensitive customer information without proper access restrictions. Incorporating Fine-Grained Access Control in vector databases is important for enforcing user preferences on data sharing and complying with privacy regulations. This project explores how to embed fine-grained access control within vector databases to ensure secure and privacy-compliant query answering.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

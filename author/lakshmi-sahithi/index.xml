<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lakshmi Sahithi | DIPr Lab at PSU</title>
    <link>https://diprlab.github.io/author/lakshmi-sahithi/</link>
      <atom:link href="https://diprlab.github.io/author/lakshmi-sahithi/index.xml" rel="self" type="application/rss+xml" />
    <description>Lakshmi Sahithi</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Fri, 18 Apr 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://diprlab.github.io/author/lakshmi-sahithi/avatar_hu_d331a8ff4c9272d3.png</url>
      <title>Lakshmi Sahithi</title>
      <link>https://diprlab.github.io/author/lakshmi-sahithi/</link>
    </image>
    
    <item>
      <title>Spring 2025 Week 3</title>
      <link>https://diprlab.github.io/dbrg/events/2025_spring_03/</link>
      <pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://diprlab.github.io/dbrg/events/2025_spring_03/</guid>
      <description>&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
      Title
    &lt;/td&gt;
    &lt;td&gt;
      PDX: A Data Layout for Vector Similarity Search
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;
      Authors
    &lt;/td&gt;
    &lt;td&gt;
      Leonardo Kuffo, Elena Krippner, and Peter Boncz from CWI Amsterdam, The Netherlands
    &lt;/td&gt;
  &lt;/tr&gt;
    &lt;tr&gt;
   &lt;td&gt;
      Abstract
    &lt;/td&gt;
    &lt;td&gt;
      We propose Partition Dimensions Across (PDX), a data layout for vectors (e.g., embeddings) that, similar to PAX, stores multiple vectors in one block, using a vertical layout for the dimensions (Figure 1). PDX accelerates exact and approximate similarity search thanks to its dimension-by-dimension search strategy that operates on multiple-vectors-at-a-time in tight loops. It beats SIMD-optimized distance kernels on standard horizontal vector storage (avg 40% faster), only relying on scalar code that gets auto-vectorized. We combined the PDX layout with recent dimension-pruning algorithms ADSampling and BSA that accelerate approximate vector search. We found that these algorithms on the horizontal vector layout can lose to SIMD-optimized linear scans, even if they are SIMD-optimized. However, when used on PDX, their benefit is restored to 2-7x. We find that search on PDX is especially fast if a limited number of dimensions has to be scanned fully, which is what the dimension-pruning approaches do. We finally introduce PDX-BOND, an even more flexible dimension-pruning strategy, with good performance on exact search and reasonable performance on approximate search. Unlike previous pruning algorithms, it can work on vector data &#34;as-is&#34; without preprocessing; making it attractive for vector databases with frequent updates.
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Fine Grained Access Control in Vector Databases</title>
      <link>https://diprlab.github.io/project/vectordb-access-control/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://diprlab.github.io/project/vectordb-access-control/</guid>
      <description>&lt;p&gt;Vector databases are particularly well-suited for similarity search using search algorithms like approximate nearest neighbor (ANN) search and they are used in development of Retrieval-Augmented Generation (RAG) systems, to reduce hallucinations in responses of AI systems. One significant challenge in using vector databases, especially in applications like RAG, is ensuring data privacy and security. For example, a clothing company that builds an AI chatbot that interacts with a vector database containing customer orders and product data could expose sensitive customer information without proper access restrictions. Incorporating Fine-Grained Access Control in vector databases is important for enforcing user preferences on data sharing and complying with privacy regulations. This project explores how to embed fine-grained access control within vector databases to ensure secure and privacy-compliant query answering.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
